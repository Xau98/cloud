use databaseIOT;
CREATE TABLE IF NOT EXISTS device_profile (
    id BINARY(16) NOT NULL,
    created_time bigint(45) NOT NULL,
    name varchar(255),
    type varchar(255),
    image varchar(255),
    transport_type varchar(255),
    provision_type varchar(255),
    profile_data JSON NOT NULL,
    description varchar(255),
    search_text varchar(255),
    is_default boolean,
    tenant_id BINARY(16),
    firmware_id BINARY(16),
    software_id BINARY(16),
    default_rule_chain_id BINARY(16),
    default_dashboard_id BINARY(16),
    default_queue_name varchar(255),
    provision_device_key varchar(255),
    PRIMARY KEY (id),
    CONSTRAINT device_profile_name_unq_key UNIQUE (tenant_id, name),
    CONSTRAINT device_provision_key_unq_key UNIQUE (provision_device_key)
);
CREATE TABLE IF NOT EXISTS firmware (
    id BINARY(16) NOT NULL,
    created_time bigint(45) NOT NULL,
    tenant_id BINARY(16) NOT NULL,
    device_profile_id BINARY(16) ,
    type varchar(32) NOT NULL,
    title varchar(255) NOT NULL,
    version varchar(255) NOT NULL,
    url varchar(255),
    file_name varchar(255),
    content_type varchar(255),
    checksum_algorithm varchar(32),
    checksum varchar(1020),
    data varchar(1020),
    data_size bigint(45),
    additional_info varchar(255),
    search_text varchar(255),
    PRIMARY KEY (id),
    CONSTRAINT ota_package_tenant_title_version_unq_key UNIQUE (tenant_id, title, version)
--     CONSTRAINT fk_device_profile_firmware FOREIGN KEY (device_profile_id) REFERENCES device_profile(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS device (
    id  BINARY(16) NOT NULL,
    created_time bigint(45) NOT NULL,
    additional_info varchar(1080),
    customer_id  BINARY(16),
    device_profile_id BINARY(16) NOT NULL,
    device_data JSON,
    type varchar(255),
    name varchar(255),
    label varchar(255),
    search_text varchar(255),
    tenant_id BINARY(16),
    firmware_id BINARY(16),
    software_id BINARY(16),
    PRIMARY KEY (id),
    CONSTRAINT device_name_unq_key UNIQUE (tenant_id, name),
    CONSTRAINT fk_device_profile FOREIGN KEY (device_profile_id) REFERENCES device_profile(id),
    CONSTRAINT fk_firmware_device FOREIGN KEY (firmware_id) REFERENCES firmware(id),
    CONSTRAINT fk_software_device FOREIGN KEY (software_id) REFERENCES firmware(id)
);